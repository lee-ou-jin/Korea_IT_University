"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Adapter = void 0;
const parser_1 = require("../parser");
const Database_1 = require("./Database");
const Resource_1 = require("./Resource");
/**
 * @example
 * import { Adapter } from 'adminjs-sql';
 * AdminJS.registerAdapter(Adapter);
 */
class Adapter {
    constructor() { }
    /**
     * Read database schema for AdminJS. All parameters are directly passed to {@link Knex}.
     *
     * @param client sql driver name.
     * @param connection connectionOptions.
     * @example
     * const database = await Adapter.init('mysql2', {
     *    host: DB_HOST,
     *    user: DB_USER,
     *    password: DB_PASSWORD,
     *    database: DB_DATABASE,
     *  })
     */
    static init(client, connection) {
        return __awaiter(this, void 0, void 0, function* () {
            return (0, parser_1.parse)(client, connection);
        });
    }
}
exports.Adapter = Adapter;
/**
 * You don't need to access this property. Looking for {@link Adapter.init}?
 */
Adapter.Database = Database_1.Database;
/**
 * You don't need to access this property. Looking for {@link Adapter.init}?
 */
Adapter.Resource = Resource_1.Resource;
//# sourceMappingURL=index.js.map