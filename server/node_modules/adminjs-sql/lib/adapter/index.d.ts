import { DatabaseInfo } from '../info/DatabaseInfo';
import { Client } from '../typing/Client';
import { ConnectionOptions } from '../typing/ConnectionOptions';
/**
 * @example
 * import { Adapter } from 'adminjs-sql';
 * AdminJS.registerAdapter(Adapter);
 */
export declare class Adapter {
    /**
     * You don't need to access this property. Looking for {@link Adapter.init}?
     */
    static Database: any;
    /**
     * You don't need to access this property. Looking for {@link Adapter.init}?
     */
    static Resource: any;
    private constructor();
    /**
     * Read database schema for AdminJS. All parameters are directly passed to {@link Knex}.
     *
     * @param client sql driver name.
     * @param connection connectionOptions.
     * @example
     * const database = await Adapter.init('mysql2', {
     *    host: DB_HOST,
     *    user: DB_USER,
     *    password: DB_PASSWORD,
     *    database: DB_DATABASE,
     *  })
     */
    static init(client: Client, connection: ConnectionOptions): Promise<DatabaseInfo>;
}
